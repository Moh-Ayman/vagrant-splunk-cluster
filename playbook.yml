---
- hosts: master,index1,index2,index3,index4,search3,search2,search1
  vars:
      splunkver: 6.5.1-f74036626f0c-linux-2.6-x86_64
      installapps: True
      adminpassword: splunk

  tasks:
    - name: Ensure libselinux-python installed
      yum: name=libselinux-python state=present

    - name: Ensure net-tools installed
      yum: name=net-tools state=present

    - name: Ensure wget installed
      yum: name=wget state=present

    - name: Ensure aliases.sh present
      copy: src=files/aliases.sh dest=/etc/profile.d/aliases.sh
            owner=root group=root mode=0644

    - name: Ensure EPEL repo is configured
      shell: rpm -q epel-release || yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

    - name: Ensure hostname is in /etc/hosts
      lineinfile:
        dest=/etc/hosts
        regexp="^{{ ansible_default_ipv4.address }}.+$"
        line="{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"

    # pulls from EPEL
    - name: Ensure nginx is installed
      yum: name=nginx state=present

    - name: Ensure nginx config in place
      copy: dest=/etc/nginx/nginx.conf
            src=files/nginx.conf
      notify:
        - restart nginx

    - name: Ensure nginx proxies for local Splunk
      template: src=templates/splunk.conf.j2 dest=/etc/nginx/conf.d/splunk.conf
                owner=root group=root mode=0644
      notify:
        - restart nginx

    - name: Ensure Splunk package installed
      yum:  name=/home/vagrant/sync/sw/splunk-{{ splunkver }}.rpm state=present

    # https://apps.splunk.com/app/466/ (deprecated)
    # now downloaded from http://sideviewapps.com/apps/sideview-utils/download-full-version-internal-use/
    - name: Install Sideview Utils
      unarchive: src=sw/sideview_utils.spl
                 dest=/opt/splunk/etc/apps
                 creates=/opt/splunk/etc/apps/sideview_utils
      when: installapps
      notify:
        - restart splunk

    # https://apps.splunk.com/app/1603/
    - name: Install Splunk-6 dashboard examples
      unarchive: src=sw/splunk-6x-dashboard-examples_501.tgz
                 dest=/opt/splunk/etc/apps
                 creates=/opt/splunk/etc/apps/simple_xml_examples
      when: installapps
      notify:
        - restart splunk

    # https://apps.splunk.com/app/273/
    - name: Install Splunk App for UNIX and Linux
      unarchive: src=sw/splunk-app-for-unix-and-linux_510.tgz
                 dest=/opt/splunk/etc/apps
                 creates=/opt/splunk/etc/apps/splunk_app_for_nix
      when: installapps
      notify:
        - restart splunk

    # https://apps.splunk.com/app/2834/
    - name: Install Splunk App for Twitter
      unarchive: src=sw/app-for-twitter-data_301.tgz
                 dest=/opt/splunk/etc/apps
                 creates=/opt/splunk/etc/apps/app-for-twitter-data
      when: installapps
      notify:
        - restart splunk

    - name: Ensure Splunk service is configured
      copy: src=files/splunk.init dest=/etc/init.d/splunk
            owner=root group=root mode=0755
      notify:
        - restart splunk

    - name: Start Splunk service
      service: name=splunk state=started enabled=yes

    - name: Start nginx service
      service: name=nginx state=started enabled=yes

    # pulls from EPEL
    - name: Ensure dkms is installed needed to preserve additions thru kernel updates
      yum: name=dkms state=present

    - name: Extract vm additions
      unarchive: src=sw/vmadditions.tar.gz
                 dest=/tmp
                 creates=/tmp/vmadditions

    - name: Install VM additions
      shell: /tmp/additions/VBoxLinuxAdditions.run

    - name: disable eth1 (workaround because its not getting ip4 address assigned on first start)
      shell: ifdown eth1

    - name: enable eth1 (workaround because its not getting ip4 address assigned on first start)
      shell: ifup eth1

    - name: Remove existing passwd file if it exists if we're reloading
      shell: rm /opt/splunk/etc/passwd
      notify:
        - restart splunk

    - name: Set splunk admin password
      shell: /opt/splunk/bin/splunk edit user admin -password {{ adminpassword }} -auth admin:changeme
      ignore_errors: true

    - name: Get rid of first time logging in? message
      shell: touch /opt/splunk/etc/.ui_login

###################################################
## indexer clustering settings

    - name: Enable forward port
      shell: /opt/splunk/bin/splunk enable listen 9997 -auth admin:{{ adminpassword }}
      when: "'index' in inventory_hostname"

    - name: Splunk master settings
      command: /opt/splunk/bin/splunk edit cluster-config -mode master -replication_factor 2 -search_factor 2 -auth admin:{{ adminpassword }} -secret mysecretindexerkey
      when: "'master' in inventory_hostname"
      notify:
        - restart splunk

    - name: Enable deployment server
      command: /opt/splunk/bin/splunk enable deploy-server
      when: "'master' in inventory_hostname"
      notify:
        - restart splunk

    - name: Splunk peer settings
      command: /opt/splunk/bin/splunk edit cluster-config -mode slave -master_uri https://192.168.33.101:8089 -replication_port 8080 -auth admin:{{ adminpassword }} -secret mysecretindexerkey
      when: "'index' in inventory_hostname"
      notify:
        - restart splunk

###################################################
## Enterprise License installation (if it exists)

    - name: Add enterprise license on master if it exists
      command: "/opt/splunk/bin/splunk add licenses /home/vagrant/sync/files/licenses/enterprise.lic"
      ignore_errors: true

    - name: Configure license slave
      command: "/opt/splunk/bin/splunk edit licenser-localslave -master_uri https://192.168.33.101:8089 -auth admin:{{ adminpassword }}"
      when: "'index' in inventory_hostname"

###################################################
## search head clustering
## master node is also the search head cluster deployer

    - name: Splunk search deployer init
      command: curl -k -u admin:{{ adminpassword }} https://192.168.33.101:8089/servicesNS/nobody/system/configs/conf-server/shclustering -d shcluster_label=shcluster1 -d pass4SymmKey=mysecretsearchheadkey
      when: "'master' in inventory_hostname"
      notify:
        - restart splunk

    - name: Splunk search head cluster instances init
      command: /opt/splunk/bin/splunk init shcluster-config -auth admin:{{ adminpassword }} -mgmt_uri https://192.168.33.101:8089 -replication_port 34567 -replication_factor 2 -conf_deploy_fetch_url https://192.168.33.101:8089  -shcluster_label shcluster1 -secret mysecretsearchheadkey
      when: "'search' in inventory_hostname"
      notify:
        - restart splunk

## Need to fix this, each search peer needs to point at its own mgmt_uri
    - name: Splunk enable dynamic search head cluster captain
      command: /opt/splunk/bin/splunk edit shcluster-config -election true -mgmt_uri "https://{{ ansible_default_ipv4.address }}:8089" -auth admin:{{ adminpassword }}  -secret mysecretsearchheadkey
      when: "'search' in inventory_hostname"
      notify:
        - restart splunk

    #still trying to get dynamic election to work
    - name: Start Splunk service
      service: name=splunk state=restarted enabled=yes

    - name: Splunk search head captain init
      command: /opt/splunk/bin/splunk bootstrap shcluster-captain -servers_list "https://192.168.33.108:8089,https://192.168.33.106:8089,https://192.168.33.107:8089" -auth admin:{{ adminpassword }}
      when: "'search3' in inventory_hostname"
      notify:
        - restart splunk

    - name: Splunk search head peers config
      command: /opt/splunk/bin/splunk edit cluster-config -mode searchhead -master_uri  https://192.168.33.101:8089 -auth admin:{{ adminpassword }}
      when: "'search' in inventory_hostname"
      notify:
        - restart splunk

    - name: Splunk search head disable local index
      command: /opt/splunk/bin/splunk disable local-index -auth admin:{{ adminpassword }}
      when: "'search' in inventory_hostname or 'master' in inventory_hostname"
      notify:
        - restart splunk

    - name: Copy sample app to Deployment server
      command: cp -r /opt/splunk/etc/apps/sample_app/ /opt/splunk/etc/deployment-apps/sample_app
      when: "'master' in inventory_hostname"

    - name: Update serverclass.conf on master to make it a Deployment server
      copy: dest=/opt/splunk/etc/system/local/serverclass.conf
            src=files/serverclass.conf
      when: "'master' in inventory_hostname"
      notify:
        - restart splunk

    - name: Update outputs.conf on search heads
      copy: dest=/opt/splunk/etc/system/local/outputs.conf
            src=files/outputs.conf_searchhead
      when: "'search' in inventory_hostname"

    - name: restart machine
      shell: sleep 2 && shutdown -r now "Ansible updates triggered"
      async: 1
      poll: 0
      sudo: true
      ignore_errors: true

    - name: waiting for server to come back
      local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=600
      sudo: false


  handlers:
    - name: restart splunk
      service: name=splunk state=restarted sleep=30

    - name: restart nginx
      service: name=nginx state=restarted

# vim: set ts=2 sw=2 et ft=ansible:
